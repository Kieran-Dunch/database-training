-- Select all columns from the celebs table.
SELECT * FROM celebs;

-- SELECT is an example of a clause

CREATE statements are used to create tables.

CREATE TABLE celebs (
    id INTEGER,
    name TEXT,
    age INTEGER
  );


INSERT statements are used to add data to tables.

INSERT INTO celebs (id, name, age) VALUES (1, 'Justin Bieber', 29);
INSERT INTO celebs (id, name, age) VALUES (2, 'Beyonce Knowles', 42);
INSERT INTO celebs (id, name, age) VALUES (3, 'Jeremy Lin', 35);
INSERT INTO celebs (id, name, age) VALUES (4, 'Taylor Swift', 33);

SELECT statements are used to query data. The SELECT clause is always the first
clause in a query.

SELECT name FROM celebs;
The above statement will return the name column from the celebs table.
SELECT always return a new table called the result set.

SELECT * FROM celebs;
The above statement will return all columns from the celebs table.

ALTER statements are used to modify tables.

ALTER TABLE celebs ADD COLUMN twitter_handle TEXT;

UPDATE statements are used to edit rows in a table.
UPDATE is used to change existing records in a table.

Example:
UPDATE celebs -- table name
SET age = 22 -- column name and new value
WHERE id = 1; -- condition to find the row(s) to update

DELETE statements are used to remove rows from a table.
DELETE FROM celebs WHERE twitter_handle IS NULL;

Constraints are rules enforced on data columns on a table. These are used to
prevent invalid data from being entered into the database.

The following are the constraints that can be added to a table:
PRIMARY KEY: Uniquely identifies each row/record in a database table.
NOT NULL: Ensures a column cannot have a NULL value.
UNIQUE: Ensures all values in a column are different.
DEFAULT: Sets a default value for a column when no value is specified.

Example:
CREATE TABLE celebs (
    id INTEGER PRIMARY KEY,
    name TEXT UNIQUE,
    date_of_birth TEXT NOT NULL,
    date_of_death TEXT DEFAULT 'Not Applicable'
  );

The table that is being created will now reject any entry that does not follow
the constraints.
